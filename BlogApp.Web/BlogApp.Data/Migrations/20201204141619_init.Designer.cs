// <auto-generated />
using System;
using BlogApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlogApp.Data.Migrations
{
    [DbContext(typeof(BlogAppDBContext))]
    [Migration("20201204141619_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BlogApp.Data.Entity.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<int>("Dislike");

                    b.Property<int>("Like");

                    b.Property<int>("PostId");

                    b.Property<int?>("PostId1");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("PostId1");

                    b.ToTable("Comments");

                    b.HasData(
                        new { Id = 1, Created = new DateTime(2020, 12, 4, 14, 16, 18, 776, DateTimeKind.Utc), Dislike = 3, Like = 12, PostId = 1, Text = "Test comment.", UserName = "User 1" },
                        new { Id = 2, Created = new DateTime(2020, 12, 4, 14, 16, 18, 776, DateTimeKind.Utc), Dislike = 5, Like = 10, PostId = 3, Text = "Test comment.", UserName = "User 2" },
                        new { Id = 3, Created = new DateTime(2020, 12, 4, 14, 16, 18, 776, DateTimeKind.Utc), Dislike = 1, Like = 7, PostId = 2, Text = "Test comment.", UserName = "User 3" },
                        new { Id = 4, Created = new DateTime(2020, 12, 4, 14, 16, 18, 776, DateTimeKind.Utc), Dislike = 2, Like = 14, PostId = 3, Text = "Test comment.", UserName = "Admin" },
                        new { Id = 5, Created = new DateTime(2020, 12, 4, 14, 16, 18, 776, DateTimeKind.Utc), Dislike = 2, Like = 2, PostId = 5, Text = "Test comment.", UserName = "User 1" },
                        new { Id = 6, Created = new DateTime(2020, 12, 4, 14, 16, 18, 776, DateTimeKind.Utc), Dislike = 1, Like = 5, PostId = 6, Text = "Test comment.", UserName = "Admin" }
                    );
                });

            modelBuilder.Entity("BlogApp.Data.Entity.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("Posts");

                    b.HasData(
                        new { Id = 1, Created = new DateTime(2020, 12, 4, 14, 16, 18, 775, DateTimeKind.Utc), Title = "Post 1", UserName = "Admin" },
                        new { Id = 2, Created = new DateTime(2020, 12, 4, 14, 16, 18, 775, DateTimeKind.Utc), Title = "Post 2", UserName = "Admin" },
                        new { Id = 3, Created = new DateTime(2020, 12, 4, 14, 16, 18, 775, DateTimeKind.Utc), Title = "Post 3", UserName = "Admin" },
                        new { Id = 4, Created = new DateTime(2020, 12, 4, 14, 16, 18, 775, DateTimeKind.Utc), Title = "Post 4", UserName = "User 1" },
                        new { Id = 5, Created = new DateTime(2020, 12, 4, 14, 16, 18, 775, DateTimeKind.Utc), Title = "Post 5", UserName = "User 2" },
                        new { Id = 6, Created = new DateTime(2020, 12, 4, 14, 16, 18, 775, DateTimeKind.Utc), Title = "Post 6", UserName = "User 3" }
                    );
                });

            modelBuilder.Entity("BlogApp.Data.Entity.Comment", b =>
                {
                    b.HasOne("BlogApp.Data.Entity.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BlogApp.Data.Entity.Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId1");
                });
#pragma warning restore 612, 618
        }
    }
}
